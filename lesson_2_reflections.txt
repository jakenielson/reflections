What happens when you initialize a repository? Why do you need to do it?

git creates a git folder that stores all your git metadata. You need to do if before you can create commits.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area is an in-between place that you put files in before you commit them. This allows you to choose which files you want to commit instead of commiting your entire working directory every time.

How can you use the staging area to make sure you have one commit per logical change?

You can look at the differences between the staging area and the working directory and the last commit to make sure the changes
only involve one logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

You might want to add a branch when adding an experimental new feature or when creating a new version of the program
that should be kept seperate from the main version of the program.

How do the diagrams help you visualize the branch structure?

Uhh by translating the branch structure into a visual format?

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The changes made in each of the branches are smartly added together and can then be referred to with one branch.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
Automatic merging is quick and easy, and if you do it right it makes it easy to collaborate. However,
conflicts can sometimes arise and require manual merging.